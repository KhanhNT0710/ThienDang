{"ast":null,"code":"import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";import{orderApis}from\"../../../apis/orderApis\";import{message}from\"antd\";import{actClearCarts}from\"../cart/cartSlice\";const initialState={orders:[],order:{},isLoading:false,errors:{},isBought:false};export const actFetchAllOrders=createAsyncThunk(\"order/fetchAllOrders\",async params=>{const response=await orderApis.getAllOrders({params:params});return response.data;});export const actAddOrder=createAsyncThunk(\"order/addOrder\",async order=>{const response=await orderApis.addOrder(order);console.log(response,'response');return response;// const response = await orderApis.addOrder(order);\n// return response;\n});export const actFetchOrderById=createAsyncThunk(\"order/fetchOrderById\",async id=>{return await orderApis.getOrderById(id);});const orderSlice=createSlice({name:\"order\",initialState:initialState,reducers:{setLoading:(state,action)=>{state.isLoading=true;},sendOrderSuccess:(state,action)=>{state.order=action.payload;message.success(\"Đặt hàng thành công! Success\");},sendOrderFailure:(state,action)=>{message.error(\"Đặt hàng thất bại! Failure\");},clearOrder:(state,action)=>{state.orders=[];state.order={};}},extraReducers:builder=>{builder.addCase(actFetchAllOrders.pending,(state,action)=>{state.isLoading=true;});builder.addCase(actFetchAllOrders.rejected,(state,action)=>{state.isLoading=false;state.errors={};});builder.addCase(actFetchAllOrders.fulfilled,(state,action)=>{state.isLoading=false;state.orders=action.payload;});builder.addCase(actAddOrder.fulfilled,(state,action)=>{// console.log(action.payload, \"action.payload add order ne\");\nstate.order=action.payload;state.orders.push(action.payload);message.success(\"Đặt hàng thành công!\");});builder.addCase(actAddOrder.rejected,(state,action)=>{state.orders=[];state.customerInfo={};message.error(action.payload);});builder.addCase(actFetchOrderById.fulfilled,(state,action)=>{state.order=action.payload;});}});export const{setLoading,sendOrderSuccess,sendOrderFailure,clearOrder}=orderSlice.actions;export const orderReducer=orderSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","orderApis","message","actClearCarts","initialState","orders","order","isLoading","errors","isBought","actFetchAllOrders","params","response","getAllOrders","data","actAddOrder","addOrder","console","log","actFetchOrderById","id","getOrderById","orderSlice","name","reducers","setLoading","state","action","sendOrderSuccess","payload","success","sendOrderFailure","error","clearOrder","extraReducers","builder","addCase","pending","rejected","fulfilled","push","customerInfo","actions","orderReducer","reducer"],"sources":["D:/Front End/ReactJS/thien dang/client/src/redux/features/order/orderSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { orderApis } from \"../../../apis/orderApis\";\nimport { message } from \"antd\";\nimport { actClearCarts } from \"../cart/cartSlice\";\n\nconst initialState = {\n  orders: [],\n  order: {},\n  isLoading: false,\n  errors: {},\n  isBought: false,\n};\n\nexport const actFetchAllOrders = createAsyncThunk(\n  \"order/fetchAllOrders\",\n  async (params) => {\n    const response = await orderApis.getAllOrders({ params: params });\n    return response.data;\n  }\n);\n\nexport const actAddOrder = createAsyncThunk(\"order/addOrder\", async (order) => {\n  const response = await orderApis.addOrder(order);\n  console.log(response, 'response');\n  return response;\n  // const response = await orderApis.addOrder(order);\n  // return response;\n});\n\nexport const actFetchOrderById = createAsyncThunk(\n  \"order/fetchOrderById\",\n  async (id) => {\n    return await orderApis.getOrderById(id);\n  }\n);\n\nconst orderSlice = createSlice({\n  name: \"order\",\n  initialState: initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.isLoading = true;\n    },\n    sendOrderSuccess: (state, action) => {\n      state.order = action.payload;\n      message.success(\"Đặt hàng thành công! Success\");\n    },\n    sendOrderFailure: (state, action) => {\n      message.error(\"Đặt hàng thất bại! Failure\");\n    },\n    clearOrder: (state, action) => {\n      state.orders = [];\n      state.order = {};\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(actFetchAllOrders.pending, (state, action) => {\n      state.isLoading = true;\n    });\n    builder.addCase(actFetchAllOrders.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errors = {};\n    });\n    builder.addCase(actFetchAllOrders.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.orders = action.payload;\n    });\n\n    builder.addCase(actAddOrder.fulfilled, (state, action) => {\n      // console.log(action.payload, \"action.payload add order ne\");\n      state.order = action.payload;\n      state.orders.push(action.payload);\n      message.success(\"Đặt hàng thành công!\");\n    });\n    builder.addCase(actAddOrder.rejected, (state, action) => {\n      state.orders = [];\n      state.customerInfo = {};\n      message.error(action.payload);\n    });\n\n    builder.addCase(actFetchOrderById.fulfilled, (state, action) => {\n      state.order = action.payload;\n    });\n  },\n});\n\nexport const { setLoading, sendOrderSuccess, sendOrderFailure, clearOrder } =\n  orderSlice.actions;\nexport const orderReducer = orderSlice.reducer;\n"],"mappings":"AAAA,OAASA,gBAAgB,CAAEC,WAAW,KAAQ,kBAAkB,CAChE,OAASC,SAAS,KAAQ,yBAAyB,CACnD,OAASC,OAAO,KAAQ,MAAM,CAC9B,OAASC,aAAa,KAAQ,mBAAmB,CAEjD,KAAM,CAAAC,YAAY,CAAG,CACnBC,MAAM,CAAE,EAAE,CACVC,KAAK,CAAE,CAAC,CAAC,CACTC,SAAS,CAAE,KAAK,CAChBC,MAAM,CAAE,CAAC,CAAC,CACVC,QAAQ,CAAE,KACZ,CAAC,CAED,MAAO,MAAM,CAAAC,iBAAiB,CAAGX,gBAAgB,CAC/C,sBAAsB,CACtB,KAAO,CAAAY,MAAM,EAAK,CAChB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,SAAS,CAACY,YAAY,CAAC,CAAEF,MAAM,CAAEA,MAAO,CAAC,CAAC,CACjE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,WAAW,CAAGhB,gBAAgB,CAAC,gBAAgB,CAAE,KAAO,CAAAO,KAAK,EAAK,CAC7E,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAX,SAAS,CAACe,QAAQ,CAACV,KAAK,CAAC,CAChDW,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAE,UAAU,CAAC,CACjC,MAAO,CAAAA,QAAQ,CACf;AACA;AACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAO,iBAAiB,CAAGpB,gBAAgB,CAC/C,sBAAsB,CACtB,KAAO,CAAAqB,EAAE,EAAK,CACZ,MAAO,MAAM,CAAAnB,SAAS,CAACoB,YAAY,CAACD,EAAE,CAAC,CACzC,CACF,CAAC,CAED,KAAM,CAAAE,UAAU,CAAGtB,WAAW,CAAC,CAC7BuB,IAAI,CAAE,OAAO,CACbnB,YAAY,CAAEA,YAAY,CAC1BoB,QAAQ,CAAE,CACRC,UAAU,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC7BD,KAAK,CAACnB,SAAS,CAAG,IAAI,CACxB,CAAC,CACDqB,gBAAgB,CAAEA,CAACF,KAAK,CAAEC,MAAM,GAAK,CACnCD,KAAK,CAACpB,KAAK,CAAGqB,MAAM,CAACE,OAAO,CAC5B3B,OAAO,CAAC4B,OAAO,CAAC,8BAA8B,CAAC,CACjD,CAAC,CACDC,gBAAgB,CAAEA,CAACL,KAAK,CAAEC,MAAM,GAAK,CACnCzB,OAAO,CAAC8B,KAAK,CAAC,4BAA4B,CAAC,CAC7C,CAAC,CACDC,UAAU,CAAEA,CAACP,KAAK,CAAEC,MAAM,GAAK,CAC7BD,KAAK,CAACrB,MAAM,CAAG,EAAE,CACjBqB,KAAK,CAACpB,KAAK,CAAG,CAAC,CAAC,CAClB,CACF,CAAC,CACD4B,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CAACC,OAAO,CAAC1B,iBAAiB,CAAC2B,OAAO,CAAE,CAACX,KAAK,CAAEC,MAAM,GAAK,CAC5DD,KAAK,CAACnB,SAAS,CAAG,IAAI,CACxB,CAAC,CAAC,CACF4B,OAAO,CAACC,OAAO,CAAC1B,iBAAiB,CAAC4B,QAAQ,CAAE,CAACZ,KAAK,CAAEC,MAAM,GAAK,CAC7DD,KAAK,CAACnB,SAAS,CAAG,KAAK,CACvBmB,KAAK,CAAClB,MAAM,CAAG,CAAC,CAAC,CACnB,CAAC,CAAC,CACF2B,OAAO,CAACC,OAAO,CAAC1B,iBAAiB,CAAC6B,SAAS,CAAE,CAACb,KAAK,CAAEC,MAAM,GAAK,CAC9DD,KAAK,CAACnB,SAAS,CAAG,KAAK,CACvBmB,KAAK,CAACrB,MAAM,CAAGsB,MAAM,CAACE,OAAO,CAC/B,CAAC,CAAC,CAEFM,OAAO,CAACC,OAAO,CAACrB,WAAW,CAACwB,SAAS,CAAE,CAACb,KAAK,CAAEC,MAAM,GAAK,CACxD;AACAD,KAAK,CAACpB,KAAK,CAAGqB,MAAM,CAACE,OAAO,CAC5BH,KAAK,CAACrB,MAAM,CAACmC,IAAI,CAACb,MAAM,CAACE,OAAO,CAAC,CACjC3B,OAAO,CAAC4B,OAAO,CAAC,sBAAsB,CAAC,CACzC,CAAC,CAAC,CACFK,OAAO,CAACC,OAAO,CAACrB,WAAW,CAACuB,QAAQ,CAAE,CAACZ,KAAK,CAAEC,MAAM,GAAK,CACvDD,KAAK,CAACrB,MAAM,CAAG,EAAE,CACjBqB,KAAK,CAACe,YAAY,CAAG,CAAC,CAAC,CACvBvC,OAAO,CAAC8B,KAAK,CAACL,MAAM,CAACE,OAAO,CAAC,CAC/B,CAAC,CAAC,CAEFM,OAAO,CAACC,OAAO,CAACjB,iBAAiB,CAACoB,SAAS,CAAE,CAACb,KAAK,CAAEC,MAAM,GAAK,CAC9DD,KAAK,CAACpB,KAAK,CAAGqB,MAAM,CAACE,OAAO,CAC9B,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEJ,UAAU,CAAEG,gBAAgB,CAAEG,gBAAgB,CAAEE,UAAW,CAAC,CACzEX,UAAU,CAACoB,OAAO,CACpB,MAAO,MAAM,CAAAC,YAAY,CAAGrB,UAAU,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}