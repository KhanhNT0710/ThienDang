{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front End\\\\ReactJS\\\\thien dang\\\\client\\\\src\\\\pages\\\\LoginPage\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Input } from \"antd\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ROUTES } from \"../../constants/routes\";\nimport { useDispatch } from \"react-redux\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { actLogin } from \"../../redux/features/user/userSlice\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginSchema = Yup.object().shape({\n  user: Yup.string().required(\"Username is required\"),\n  password: Yup.string().required(\"password is required\")\n});\nconst LoginPage = () => {\n  _s();\n  var _errorsValidate$user, _errorsValidate$passw;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const methods = useForm({\n    defaultValues: {\n      user: \"\",\n      password: \"\"\n    },\n    resolver: yupResolver(loginSchema)\n  });\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors: errorsValidate\n    }\n  } = methods;\n  const onValid = formValue => {\n    dispatch(actLogin(formValue));\n  };\n  const handleRedirectToRegisterPage = () => {\n    navigate(ROUTES.REGISTER_PAGE);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-page-container__form-login-grp\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"login-page-container__form-login\",\n          onSubmit: handleSubmit(onValid),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-page-container__title\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u0110\\u0103ng nh\\u1EADp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-page-container__input-grp\",\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"user\",\n              render: ({\n                field\n              }) => {\n                return /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  placeholder: \"Account\",\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 26\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), errorsValidate.user && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: (_errorsValidate$user = errorsValidate.user) === null || _errorsValidate$user === void 0 ? void 0 : _errorsValidate$user.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"password\",\n              render: ({\n                field: {\n                  onChange,\n                  value\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(Input.Password, {\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  autoComplete: \"on\",\n                  value: value,\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), errorsValidate.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: (_errorsValidate$passw = errorsValidate.password) === null || _errorsValidate$passw === void 0 ? void 0 : _errorsValidate$passw.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-page-container__btn-login\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              htmlType: \"submit\",\n              children: \"\\u0110\\u0103ng nh\\u1EADp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"KldZhojQOlfLBhCZ+YMYpZkhK0o=\", false, function () {\n  return [useDispatch, useNavigate, useForm];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["Button","Input","React","useNavigate","ROUTES","useDispatch","Controller","useForm","Yup","yupResolver","actLogin","jsxDEV","_jsxDEV","loginSchema","object","shape","user","string","required","password","LoginPage","_s","_errorsValidate$user","_errorsValidate$passw","dispatch","navigate","methods","defaultValues","resolver","control","handleSubmit","formState","errors","errorsValidate","onValid","formValue","handleRedirectToRegisterPage","REGISTER_PAGE","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","name","render","field","type","placeholder","style","color","message","onChange","value","Password","autoComplete","htmlType","_c","$RefreshReg$"],"sources":["D:/Front End/ReactJS/thien dang/client/src/pages/LoginPage/index.jsx"],"sourcesContent":["import { Button, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ROUTES } from \"../../constants/routes\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { actLogin } from \"../../redux/features/user/userSlice\";\r\nimport \"./style.scss\";\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  user: Yup.string().required(\"Username is required\"),\r\n  password: Yup.string().required(\"password is required\"),\r\n});\r\n\r\nconst LoginPage = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const methods = useForm({\r\n    defaultValues: {\r\n      user: \"\",\r\n      password: \"\",\r\n    },\r\n    resolver: yupResolver(loginSchema),\r\n  });\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors: errorsValidate },\r\n  } = methods;\r\n\r\n  const onValid = (formValue) => {\r\n    dispatch(actLogin(formValue));\r\n  };\r\n\r\n  const handleRedirectToRegisterPage = () => {\r\n    navigate(ROUTES.REGISTER_PAGE);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page-wrapper\">\r\n      <div className=\"login-page-container\">\r\n        <div className=\"login-page-container__form-login-grp\">\r\n          <form\r\n            className=\"login-page-container__form-login\"\r\n            onSubmit={handleSubmit(onValid)}\r\n          >\r\n            <div className=\"login-page-container__title\">\r\n              <h3>Đăng nhập</h3>\r\n            </div>\r\n            <div className=\"login-page-container__input-grp\">\r\n              <Controller\r\n                control={control}\r\n                name=\"user\"\r\n                render={({ field }) => {\r\n                  return <Input type=\"text\" placeholder=\"Account\" {...field} />;\r\n                }}\r\n              />\r\n              {errorsValidate.user && (\r\n                <span style={{ color: \"red\" }}>\r\n                  {errorsValidate.user?.message}\r\n                </span>\r\n              )}\r\n\r\n              <Controller\r\n                control={control}\r\n                name=\"password\"\r\n                render={({ field: { onChange, value } }) => {\r\n                  return (\r\n                    <Input.Password\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      autoComplete=\"on\"\r\n                      value={value}\r\n                      onChange={onChange}\r\n                    />\r\n                  );\r\n                }}\r\n              />\r\n              {errorsValidate.password && (\r\n                <span style={{ color: \"red\" }}>\r\n                  {errorsValidate.password?.message}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"login-page-container__btn-login\">\r\n              <Button htmlType=\"submit\">Đăng nhập</Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}